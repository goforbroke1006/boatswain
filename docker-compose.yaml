# Local test network for chat demo.
# DHT with rendezvous phrase "github.com/goforbroke1006/boatswain/chat"
# Two bootstrap instances (inside containers port 47000), 5 nodes (random port).
# Node #2 has open ports 8081 for REST API.
#
# Diagrams in docs/chat/README.md file
#
# Run sample with
#   go run . -- dapp chat --username=JohnSmith
#

version: "3.9"

services:

  minimal:
    image: busybox:1
    depends_on:
      node-001: { condition: service_healthy }
      node-002: { condition: service_healthy }
      node-003: { condition: service_healthy }
      node-004: { condition: service_healthy }
      node-005: { condition: service_healthy }

  node-001: &node
    image: github.com/goforbroke1006/boatswain:dev
    command: node --rendezvous="github.com/goforbroke1006/boatswain/chat"
    volumes:
      - ./:/code/
      - ./.docker-compose/node-001/.boatswain/keys/:/root/.boatswain/keys/:rw
      - ./.docker-compose/node-any/.boatswain/peers.txt:/root/.boatswain/peers.txt:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/readyz"]
      start_period: 30s
      interval: 5s
      retries: 10
      timeout: 5s
    depends_on:
      bootstrap-1:
        condition: service_healthy
      bootstrap-2:
        condition: service_healthy
    networks: { subnet01: ~ }

  # http://localhost:8081/ping
  # http://localhost:8081/addresses
  # http://localhost:8081/peers
  # http://localhost:8081/addresses/QmTfmxthiEkSmLscYUkSD1SR2tmB78dncXX8BtYo5sVpoK
  node-002:
    <<: *node
    ports:
      - "58687:58687"
    volumes:
      - ./:/code/
      - ./.docker-compose/node-002/.boatswain/keys/:/root/.boatswain/keys/:rw
      - ./.docker-compose/node-any/.boatswain/peers.txt:/root/.boatswain/peers.txt:ro

  node-003:
    <<: *node
    volumes:
      - ./:/code/
      - ./.docker-compose/node-003/.boatswain/keys/:/root/.boatswain/keys/:rw
      - ./.docker-compose/node-any/.boatswain/peers.txt:/root/.boatswain/peers.txt:ro

  node-004:
    <<: *node
    volumes:
      - ./:/code/
      - ./.docker-compose/node-004/.boatswain/keys/:/root/.boatswain/keys/:rw
      - ./.docker-compose/node-any/.boatswain/peers.txt:/root/.boatswain/peers.txt:ro

  node-005:
    <<: *node
    volumes:
      - ./:/code/
      - ./.docker-compose/node-005/.boatswain/keys/:/root/.boatswain/keys/:rw
      - ./.docker-compose/node-any/.boatswain/peers.txt:/root/.boatswain/peers.txt:ro

  bootstrap-1: &bootstrap
    image: docker.io/goforbroke1006/boatswain:latest
    command: bootstrap --addr="/ip4/0.0.0.0/tcp/47000" --rendezvous="github.com/goforbroke1006/boatswain/chat"
    volumes:
      - ./.docker-compose/bootstrap-1/.boatswain/:/root/.boatswain/
    networks:
      subnet01: { ipv4_address: 10.1.0.13 }

  bootstrap-2:
    <<: *bootstrap
    volumes:
      - ./:/code/
      - ./.docker-compose/bootstrap-2/.boatswain/:/root/.boatswain/
    networks:
      subnet01: { ipv4_address: 10.1.0.14 }

networks:
  default: ~
  subnet01:
    driver: bridge
    ipam:
      config:
        - { subnet: 10.1.0.0/16, gateway: 10.1.0.1 }
#  subnet02:
#    driver: bridge
#    ipam:
#      config:
#        - { subnet: 10.2.0.0/16, gateway: 10.2.0.1 }